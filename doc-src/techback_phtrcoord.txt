/**

@page techback_phtrcoord Image coordinates in Photoropter

@section techback_panotools The coordinate system of the Panorama Tools

Since there are several sensor sizes in widespread use, and since most of the time the physical size
of the sensor is not overly interesting, the
<a href="http://panotools.sourceforge.net/">Panorama Tools</a> and
<a href="http://hugin.sourceforge.net/">Hugin</a> have adopted the following image coordinate
system, which Photoropter also uses (with modifications, see below). It makes no sense to use a
system that differs from PanoTools completely since the advantages would be slim at best, not
outweighing the obvious disadvantage of incompatibility.
@image html coord.png "Coordinate system used by Photoropter"

PTLens defines the length of the small side of the image to be always 2, with 0 marking the
image center. The length of the other side is identical to twice the aspect ratio A. So a 3:2
image has a e.g. width of 3 (ranging from -1.5 to 1.5), and a 4:3 image has a width of 2.67
(-1.33 to 1.33). This convention makes use of the fact that usually one does not have to know
the exact physical dimensions of the image sensor.

When a lens is calibrated, the diagonal crop factor of the sensor is usually stored alongside
the calibration data. Together with the crop factor of the currently used sensor, this allows for
adaption of the calibration data to different sensor sizes. That way, if a lens is calibrated
using e.g. a Nikon D90 (crop factor 1.5), the calibration data can still be used on a Canon
EOS 500 (crop factor 1.6). It is also possible (at least in theory) for the software to warn
the user before using calibration data that has been determined using a smaller sensor than
the current one.

@section techback_aspectsizes Extensions: dealing with different sensor sizes and aspect ratios

While the PanoTools coordinate system has some advantages, it does actually not deal too well
with different sensor sizes and/or aspect ratios. Everything is fine as long as one only considers
fixed combinations of camera and lens. However, when one wishes to use the same lens calibration
data with different camera types (as can be the case with DLSRs), the unmodified PanoTools
coordinates quickly become insufficient (especially when the aspect ratio is variable as well).
Because of these limitations, Photoropter uses a somewhat extended model.

Let us consider the case that a lens has been calibrated on a full-frame 35mm digital single-lens reflex
camera, e.g. a Canon EOS 5. In this case, a PanoTools coordinate value of 1.0 corresponds to a distance
of 12mm on the sensor. When the same lens is used e.g. with an APS-C model, this length has to be
corrected (or rather, the coefficients in the correction model have to be scaled accordingly). If
the aspect ratio of both sensors is identical, the conversion is straightforward: a value of 1.0
on the APS-C model corresponds to 0.625 on the full-frame sensor. However, if aspect ratios differ,
things are a bit more complex.

Now consider two cameras of different diagonal crop factor and different aspect rations. Let the width
of the first sensor be X<sub>1</sub> and its height be Y<sub>1</sub>, the diagonal D (full frame) and
the aspect ratio X<sub>1</sub>/Y<sub>1</sub>=A<sub>1</sub>. Then the following holds true:
X<sub>1</sub><sup>2</sup>+Y<sub>1</sub><sup>2</sup>=D<sup>2</sup>, yielding
Y<sub>1</sub>*sqrt(1+A<sub>1</sub><sup>2</sup>)=D. In case of the second camera, let the sensor's
diagonal length be D/c ('c' denoting the crop factor), and width and height be X<sub>2</sub> and
Y<sub>2</sub>, accordingly. Here one gets Y<sub>2</sub>*sqrt(1+A<sub>2</sub><sup>2</sup>)=D/c.
So, a coordinate y<sub>2</sub> on the crop sensor can be translated (in the normalised system)
to the full-frame case as
@f[y_1=\frac{1}{c}\cdot\frac{\sqrt{1+A_1^2}}{\sqrt{1+A_2^2}}\,y_2.@f]

In the special case of A<sub>1</sub>=A<sub>2</sub>, this reduces (as expected) to
y<sub>1</sub>=y<sub>2</sub>/c, meaning that in the example above, a normalised y coordinate of 1.0
on the cropped sensor again corresponds to 0.625 on full-frame. In general, one only  needs
the ratio of the crop factors of the sensors, so if a lens has been calibrated on a camera
with diagonal crop factor of 1.5, its parameters can be translated to 1.6 or even 2.0
as needed.

One should note that while parameters can be translated to a smaller image circle (i.e., higher crop factor),
the opposite does usually not hold true. A correction function that has been calibrated for a DX image
circle is useless in areas outside of it, so it should absolutely not be translated to full-frame (though
it is of course no problem to do this mathematically).

Since we now have seen that the aspect ratio has to be included in our considerations,
the original PanoTools definition that the shorter side of the image always be the normalised
one (meaning that the normalised axis is either X \em or Y on a case-by-case basis) can
essentially be dropped and replaced by specifying that the Y axis is always the normalised one. The
conversion between landscape and portrait orientation is then just a special case of the
general principle described before.

It is possible to translate between landscape and portrait images by choosing
A<sub>2</sub>=1/A<sub>1</sub> and one gets y<sub>1</sub>=y<sub>2</sub>*A<sub>1</sub>,
which means that a coordinate of 1.0 in a portrait image (e.g. A<sub>2</sub>=2/3) corresponds
to 1.0*3/2=1.5 in the calibrated coordinate system (for aspect ratio 3:2).

@section techback_physcoords Calculating physical coordinates

If one defines a 'norm' sensor with fixed dimensions X and Y, one can adapt the
considerations presented above to calculate the physical position on that sensor
(i.e. in millimetres). This can be useful when doing geometry conversion
(e.g. from rectilinear to fisheye or vice-versa). In that case, the absolute
coordinates are given as

@f[y=y'\lambda\ \mathrm{and}\ x=x'\lambda,@f]

where (x,y) is the absolute (physical) coordinate and (x', y') the coordinate in the
Photoropter normalised coordinate system on a sensor with aspect ratio A and crop
factor c. The norm sensor shall be 35mm full-frame (i.e., 36mm x 24mm). In this
setup, the crop factor of the full-frame sensor is defined as 1.0. One then gets
a scaling factor of

@f[\lambda=\frac{12\mathrm{mm}}{c}\cdot\frac{\sqrt{13/4}}{\sqrt{1+A^2}}.@f]

@section techback_notes Notes

It is actually quite convenient to store the diagonal crop factor and aspect together with the calibration
data rather than the alternatives, e.g. the sensor dimensions or separate crop factors for X and Y. First
of all both values are rather easy to understand, and the diagonal crop factor is a quantity already
known to many photographers. The aspect ratio can be determined automatically from the calibration image data
(assuming square pixels).

Another point worth noting is that the diagonal crop factor is directly connected to the image circle,
allowing to decide directly if the desired conversion is sensible: in general, converting to a higher
crop factor is physically sound, while the other direction should not be expected to yield useful results.

*/
